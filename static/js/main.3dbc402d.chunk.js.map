{"version":3,"sources":["components/ingredient/Ingredient.jsx","components/ingredient-list/IngredientList.jsx","components/recipe/Recipe.jsx","components/recipe-list/RecipeList.jsx","components/recipe-ingredient-edit/RecipeIngredientEdit.jsx","components/recipe-edit/RecipeEdit.jsx","App.js","index.js"],"names":["Ingredient","name","amount","IngredientList","ingredientElements","ingredients","map","ingredient","key","id","className","Recipe","props","cookTime","servings","instructions","useContext","RecipeContext","handleDeleteRecipe","handleSelectRecipe","onClick","RecipeList","recipes","handleAddRecipe","recipe","RecipeIngredientEdit","handleChangeIngredient","handleDeleteIngredient","handleChange","changes","type","value","onChange","e","target","RecipeEdit","handleChangeRecipe","newIngredients","findIndex","i","filter","htmlFor","min","Number","newIngredient","uuidv4","sampleRecipes","createContext","App","useState","setRecipes","selectedRecipeId","setSelectedRecipeId","selectedRecipe","find","useEffect","recipeJSON","localStorage","getItem","JSON","parse","setItem","stringify","recipeContextValue","newRecipe","newRecipes","index","r","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3dbc402d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Ingredient = ({ name, amount }) => (\n  <>\n    <span>{name}</span>\n    <span>{amount}</span>\n  </>\n);\n\nexport default Ingredient","import React from 'react';\n\nimport Ingredient from '../ingredient/Ingredient';\n\nimport './IngredientList.styles.scss';\n\nconst IngredientList = ({ ingredients }) => {\n  const ingredientElements = ingredients.map(ingredient => {\n    return <Ingredient key={ingredient.id} {...ingredient} />\n  });\n\n  return (\n    <div className='ingredient-grid'>\n      {ingredientElements}\n    </div>\n  )\n}\n\nexport default IngredientList;\n","import React, { useContext } from 'react';\n\nimport IngredientList from '../ingredient-list/IngredientList';\n\nimport { RecipeContext } from '../../App';\n\nimport './Recipe.styles.scss';\n\nconst Recipe = (props) => {\n  const { id, name, cookTime, servings, instructions, ingredients } = props;\n\n  const { handleDeleteRecipe, handleSelectRecipe } = useContext(RecipeContext);\n\n  return (\n    <div className='recipe'>\n      <div className='recipe__header'>\n        <h3 className='recipe__title'>\n          {name}\n        </h3>\n        <div>\n          <button \n            className='btn btn--primary mr-1'\n            onClick={() => handleSelectRecipe(id)}\n          >\n            Edit\n          </button>\n          <button\n            className='btn btn--danger'\n            onClick={() => handleDeleteRecipe(id)}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n      <div className='recipe__row'>\n        <span className='recipe__label'>Cook Time:</span>\n        <span className='recipe__value'>{cookTime}</span>\n      </div>\n      <div className='recipe__row'>\n        <span className='recipe__label'>Servings:</span>\n        <span className='recipe__value'>{servings}</span>\n      </div>\n      <div className='recipe__row'>\n        <span className='recipe__label'>Instructions:</span>\n        <div className='recipe__value recipe__instructions recipe__value--indented'>\n          {instructions}\n        </div>\n      </div>\n      <div className='recipe__row'>\n        <span className='recipe__label'>Ingredients:</span>\n        <div className='recipe__value recipe__value--indented'>\n          <IngredientList ingredients={ingredients} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Recipe;\n","import React, { useContext } from 'react';\n\nimport Recipe from '../recipe/Recipe';\n\nimport { RecipeContext } from '../../App';\n\nimport './RecipeList.styles.scss';\n\nconst RecipeList = ({ recipes }) => {\n  const { handleAddRecipe } = useContext(RecipeContext)\n\n  return(\n    <div className='recipe-list'>\n      <div>\n        {recipes.map(recipe => {\n          return (\n            <Recipe\n              key={recipe.id}\n              {...recipe}\n            />\n          )\n        })}\n      </div>\n      <div className='recipe-list__add-recipe-btn-container'>\n        <button \n          className='btn btn--primary'\n          onClick={handleAddRecipe}\n        >\n          Add recipe\n        </button>\n      </div>\n    </div>\n  )\n\n};\n\nexport default RecipeList;\n","import React from 'react'\n\nconst RecipeIngredientEdit = ({ ingredient, handleChangeIngredient, handleDeleteIngredient }) => {\n  const { id, name, amount } = ingredient;\n\n  const handleChange = (changes) => {\n    handleChangeIngredient(id, { ...ingredient, ...changes })\n  }\n\n  return (\n    <>\n      <input className='input' type='text' value={name} onChange={(e) => handleChange({ name: e.target.value })} />\n      <input className='input' type='text' value={amount} onChange={(e) => handleChange({ amount: e.target.value })} />\n      <button \n        className='btn btn--danger'\n        onClick={() => handleDeleteIngredient(id)}\n      >\n        &times;\n      </button>\n    </>\n  )\n};\n\nexport default RecipeIngredientEdit;\n","import React, { useContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport RecipeIngredientEdit from '../recipe-ingredient-edit/RecipeIngredientEdit';\n\nimport { RecipeContext } from '../../App';\n\nimport './RecipeEdit.styles.scss';\n\nconst RecipeEdit = ({ recipe }) => {\n  const { handleChangeRecipe, handleSelectRecipe } = useContext(RecipeContext);\n\n  const { name, cookTime, servings, instructions, ingredients } = recipe\n\n  const handleChange = (changes) => {\n    handleChangeRecipe(recipe.id, { ...recipe, ...changes })\n  }\n\n  const handleChangeIngredient = (id, ingredient) => {\n    const newIngredients = [...ingredients];\n    const index = ingredients.findIndex(i => i.id === id);\n    newIngredients[index] = ingredient;\n    handleChange({ ingredients: newIngredients })\n  }\n\n  const handleAddIngredient = () => {\n    const newIngredient = {\n      id: uuidv4(),\n      name: '',\n      amount: ''\n    };\n\n    handleChange({ ingredients: [...recipe.ingredients, newIngredient] })\n  }\n\n  const handleDeleteIngredient = (id) => {\n    handleChange({ ingredients: recipe.ingredients.filter(i=> i.id !== id) })\n  }\n\n  return (\n    <div className='recipe-edit'>\n      <div className='remove-button-container'>\n        <button\n          className='btn remove-button'\n          onClick={() => handleSelectRecipe(null)}\n        >\n          &times;\n        </button>\n      </div>\n      <div className='details-grid'>\n        <label className='label' htmlFor='name'>Name</label>\n        <input className='input' type='text' name='name' id='name' value={name} onChange={(e) => handleChange({ name: e.target.value })} />\n        <label className='label' htmlFor='cookTime'>Cook Time</label>\n        <input className='input' type='text' name='cookTime' id='cookTime' value={cookTime} onChange={(e) => handleChange({ cookTime: e.target.value })} />\n        <label className='label' htmlFor='servings'>Servings</label>\n        <input className='input' type='number' min='1' name='servings' id='servings' value={servings} onChange={(e) => handleChange({ servings: Number(e.target.value) })} />\n        <label className='label' htmlFor='instructions'>Instructions</label>\n        <textarea className='input' name='instructions' id='instructions' value={instructions} onChange={(e) => handleChange({ instructions: e.target.value })} />\n      </div>\n      <br />\n      <label className='label'>Ingredients</label>\n      <div className='ingredient-grid'>\n        <div>Name</div>\n        <div>Amount</div>\n        <div></div>\n        {ingredients.map(ingredient => <RecipeIngredientEdit key={ingredient.id} ingredient={ingredient} handleChangeIngredient={handleChangeIngredient} handleDeleteIngredient={handleDeleteIngredient} />)}\n      </div>\n      <div className='add-ingredient-btn-container'>\n        <button \n          className='btn btn--primary'\n          onClick={handleAddIngredient}\n        >\n          Add Ingredient\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default RecipeEdit;\n","import React, { useState, createContext, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport RecipeList from './components/recipe-list/RecipeList';\nimport RecipeEdit from './components/recipe-edit/RecipeEdit'\n\nimport './app.scss';\n\nconst sampleRecipes = [\n  {\n    id: uuidv4(),\n    name: 'New',\n    servings: 1,\n    cookTime: '1:00',\n    instructions: 'Instr.',\n    ingredients: [\n      {\n        id: uuidv4(),\n        name: 'Name',\n        amount: '1Tbs'\n      }\n    ]\n  }\n];\n\nexport const RecipeContext = createContext();\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.recipes'\n\nconst App = () => {\n  const [recipes, setRecipes] = useState(sampleRecipes);\n  const [selectedRecipeId, setSelectedRecipeId] = useState();\n\n  const selectedRecipe = recipes.find(recipe => recipe.id === selectedRecipeId)\n\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (recipeJSON) setRecipes(JSON.parse(recipeJSON))\n  },[]);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes))\n  },[recipes]);\n\n  const handleAddRecipe = () => {\n    const newRecipe = {\n      id: uuidv4(),\n      name: '',\n      servings: 1,\n      cookTime: '',\n      instructions: '',\n      ingredients: [\n        {\n          id: uuidv4(),\n          name: '',\n          amount: ''\n        }\n      ]\n    }\n\n    setSelectedRecipeId(newRecipe.id)\n    setRecipes([...recipes, newRecipe])\n  };\n\n  const handleDeleteRecipe = (id) => {\n    if (selectedRecipeId != null && selectedRecipeId === id){\n      setSelectedRecipeId(null)\n    }\n\n    setRecipes(recipes.filter(recipe => recipe.id !== id))\n  }\n\n  const handleSelectRecipe = (id) => {\n    setSelectedRecipeId(id)\n  }\n\n  const handleChangeRecipe = (id, recipe) => {\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex(r => r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes)\n  }\n\n  const recipeContextValue = {\n    handleAddRecipe,\n    handleDeleteRecipe,\n    handleSelectRecipe,\n    handleChangeRecipe\n  };\n\n  return (\n    <RecipeContext.Provider value={recipeContextValue}>\n      <RecipeList recipes ={recipes} />\n      {selectedRecipe ? <RecipeEdit recipe={selectedRecipe} /> : null}\n    </RecipeContext.Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}